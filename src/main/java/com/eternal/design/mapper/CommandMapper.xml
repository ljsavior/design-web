<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eternal.design.mapper.CommandMapper">
  <resultMap id="BaseResultMap" type="com.eternal.design.entity.Command">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="command_function" jdbcType="TINYINT" property="commandFunction" />
    <result column="command_description" jdbcType="VARCHAR" property="commandDescription" />
    <result column="return_data_description" jdbcType="VARCHAR" property="returnDataDescription" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="last_mod_time" jdbcType="TIMESTAMP" property="lastModTime" />
    <result column="mod_user_id" jdbcType="VARCHAR" property="modUserId" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, command_function, command_description, return_data_description, create_time, 
    last_mod_time, mod_user_id, remarks
  </sql>
  <select id="selectByExample" parameterType="com.eternal.design.entity.CommandExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from command
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from command
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from command
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.eternal.design.entity.CommandExample">
    delete from command
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.eternal.design.entity.Command">
    insert into command (id, command_function, command_description, 
      return_data_description, create_time, last_mod_time, 
      mod_user_id, remarks)
    values (#{id,jdbcType=INTEGER}, #{commandFunction,jdbcType=TINYINT}, #{commandDescription,jdbcType=VARCHAR}, 
      #{returnDataDescription,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{lastModTime,jdbcType=TIMESTAMP}, 
      #{modUserId,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.eternal.design.entity.Command">
    insert into command
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="commandFunction != null">
        command_function,
      </if>
      <if test="commandDescription != null">
        command_description,
      </if>
      <if test="returnDataDescription != null">
        return_data_description,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="lastModTime != null">
        last_mod_time,
      </if>
      <if test="modUserId != null">
        mod_user_id,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="commandFunction != null">
        #{commandFunction,jdbcType=TINYINT},
      </if>
      <if test="commandDescription != null">
        #{commandDescription,jdbcType=VARCHAR},
      </if>
      <if test="returnDataDescription != null">
        #{returnDataDescription,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModTime != null">
        #{lastModTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modUserId != null">
        #{modUserId,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.eternal.design.entity.CommandExample" resultType="java.lang.Long">
    select count(*) from command
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update command
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.commandFunction != null">
        command_function = #{record.commandFunction,jdbcType=TINYINT},
      </if>
      <if test="record.commandDescription != null">
        command_description = #{record.commandDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.returnDataDescription != null">
        return_data_description = #{record.returnDataDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastModTime != null">
        last_mod_time = #{record.lastModTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modUserId != null">
        mod_user_id = #{record.modUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update command
    set id = #{record.id,jdbcType=INTEGER},
      command_function = #{record.commandFunction,jdbcType=TINYINT},
      command_description = #{record.commandDescription,jdbcType=VARCHAR},
      return_data_description = #{record.returnDataDescription,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      last_mod_time = #{record.lastModTime,jdbcType=TIMESTAMP},
      mod_user_id = #{record.modUserId,jdbcType=VARCHAR},
      remarks = #{record.remarks,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.eternal.design.entity.Command">
    update command
    <set>
      <if test="commandFunction != null">
        command_function = #{commandFunction,jdbcType=TINYINT},
      </if>
      <if test="commandDescription != null">
        command_description = #{commandDescription,jdbcType=VARCHAR},
      </if>
      <if test="returnDataDescription != null">
        return_data_description = #{returnDataDescription,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModTime != null">
        last_mod_time = #{lastModTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modUserId != null">
        mod_user_id = #{modUserId,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.eternal.design.entity.Command">
    update command
    set command_function = #{commandFunction,jdbcType=TINYINT},
      command_description = #{commandDescription,jdbcType=VARCHAR},
      return_data_description = #{returnDataDescription,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      last_mod_time = #{lastModTime,jdbcType=TIMESTAMP},
      mod_user_id = #{modUserId,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>